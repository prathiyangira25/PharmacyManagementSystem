/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pharmacymanagementsystem;
import javax.swing.*;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.awt.*;
/**
 *
 * @author prathi
 */
public class DeleteOrder extends javax.swing.JFrame {
    Connection con;
    Statement st;
    PreparedStatement ps, ps1;
    ResultSet rs, rs1;
    /**
     * Creates new form DeleteOrder
     */
    public DeleteOrder() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(204,204,255));
        try{
            Class.forName("oracle.jdbc.OracleDriver");
            //JOptionPane.showMessageDialog(this,"Driver Loaded!");
            try {
                con = DriverManager.getConnection("jdbc:oracle:thin:@LAPTOP-K27JNK4B:1521:orcl","scott","tiger");
                //JOptionPane.showMessageDialog(this,"Connected to Oracle database!");
            }
            catch (SQLException ex) {
                Logger.getLogger(PlaceOrder.class.getName()).log(Level.SEVERE,null, ex);
            JOptionPane.showMessageDialog(this,ex.getMessage());
            }
        }
        catch(ClassNotFoundException ex){
            Logger.getLogger(PlaceOrder.class.getName()).log(Level.SEVERE,null, ex);
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }
        setLocationToMiddleLeft();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        transation_delete = new javax.swing.JLabel();
        transaction_delete_val = new javax.swing.JTextField();
        delete_button = new javax.swing.JButton();
        order_list = new java.awt.List();
        back_button = new javax.swing.JButton();
        customer_id = new javax.swing.JLabel();
        customer_id_val = new javax.swing.JTextField();
        search_button = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        refresh = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        transation_delete.setText("TRANSACTION ID TO DELETE");

        transaction_delete_val.setText(" ");

        delete_button.setText("DELETE");
        delete_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_buttonActionPerformed(evt);
            }
        });

        order_list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                order_listActionPerformed(evt);
            }
        });

        back_button.setText("BACK");
        back_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_buttonActionPerformed(evt);
            }
        });

        customer_id.setText("CUSTOMER ID");

        customer_id_val.setText(" ");

        search_button.setText("SEARCH");
        search_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_buttonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        jLabel1.setText("DELETE ORDER PAGE");

        refresh.setText("REFRESH");
        refresh.setActionCommand("REFRESH");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(delete_button)
                .addGap(40, 40, 40)
                .addComponent(back_button)
                .addGap(139, 139, 139))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(transation_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(transaction_delete_val, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(customer_id)
                        .addGap(18, 18, 18)
                        .addComponent(customer_id_val, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(search_button))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(order_list, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(refresh))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customer_id)
                    .addComponent(customer_id_val, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search_button))
                .addGap(19, 19, 19)
                .addComponent(order_list, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(transaction_delete_val, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(transation_delete))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete_button)
                    .addComponent(back_button))
                .addGap(28, 28, 28)
                .addComponent(refresh))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void order_listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_order_listActionPerformed
        // TODO add your handling code here:       
    }//GEN-LAST:event_order_listActionPerformed

    private void delete_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_buttonActionPerformed
        // TODO add your handling code here:
        String transactionIDToDelete = transaction_delete_val.getText().trim();

    if (transactionIDToDelete.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter a transaction ID.");
        return;
    }

    try {
        String updateAgentQuery = "UPDATE DELIVERY_AGENTS SET Availability = 1 WHERE DeliveryAgentID = (SELECT DeliveryAgentID FROM TRANSACTIONS1 WHERE TransactionID = ?)";
        ps1 = con.prepareStatement(updateAgentQuery);
        ps1.setString(1, transactionIDToDelete);
        ps1.executeUpdate();
        String deleteQuery = "DELETE FROM TRANSACTIONS1 WHERE TransactionID = ?";
        ps = con.prepareStatement(deleteQuery);
        ps.setString(1, transactionIDToDelete);
        int rowsAffected = ps.executeUpdate();
        
        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(this, "Transaction deleted successfully.");
        } else {
            JOptionPane.showMessageDialog(this, "No transaction found with ID: " + transactionIDToDelete);
        }
    } catch (SQLException ex) {
        Logger.getLogger(DeleteOrder.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, "Failed to delete transaction: " + ex.getMessage());
        ex.printStackTrace();
    }
    }//GEN-LAST:event_delete_buttonActionPerformed

    private void back_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_buttonActionPerformed
        // TODO add your handling code here:
        new Option().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_back_buttonActionPerformed

    private void search_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_buttonActionPerformed
        // TODO add your handling code here:
        order_list.removeAll(); // Clear the list before adding new items
    
        try {
            String selectQuery = "SELECT * FROM TRANSACTIONS1 WHERE CustomerID = ?";
            ps = con.prepareStatement(selectQuery);
            ps.setString(1, customer_id_val.getText().trim());
            rs = ps.executeQuery();

            while (rs.next()) {
                String transactionID = rs.getString("TransactionID");
                String medicineID = rs.getString("MedicineID");
                String orderDate = rs.getString("OrderDate");
                String DelvDate = rs.getString("DeliveryDate");
                String totalPrice="";
                
                String selectQuery1 = "SELECT * FROM TRANSACTIONS2 WHERE TransactionID = ?";
                ps1 = con.prepareStatement(selectQuery1);
                ps1.setString(1, transactionID);
                rs1 = ps1.executeQuery();
                while (rs1.next()) {
                    totalPrice = rs1.getString("TotalPrice");
                }
                order_list.add(transactionID+" - "+medicineID+" - "+orderDate+" - "+DelvDate+" - "+totalPrice); 
            }

            if (order_list.getItemCount() == 0) {
                JOptionPane.showMessageDialog(this, "No transactions found for this customer.");
            }
        } catch (SQLException ex) {
            Logger.getLogger(DeleteOrder.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "SQL Error: " + ex.getMessage());
        }
    }//GEN-LAST:event_search_buttonActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        DeleteOrder newFrame = new DeleteOrder();
        newFrame.setVisible(true);
    // Hide or dispose the current frame
        this.dispose();
    }//GEN-LAST:event_refreshActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeleteOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeleteOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeleteOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeleteOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlaceOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlaceOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlaceOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlaceOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeleteOrder().setVisible(true);
            }
        });
    }
    private void setLocationToMiddleLeft() {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = this.getSize();
        
        // Calculate the new location
        int x = screenSize.width / 4 - frameSize.width / 2; // Middle left quarter
        int y = screenSize.height / 2 - frameSize.height / 2; // Center vertically

        this.setLocation(x, y);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back_button;
    private javax.swing.JLabel customer_id;
    private javax.swing.JTextField customer_id_val;
    private javax.swing.JButton delete_button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private java.awt.List order_list;
    private javax.swing.JButton refresh;
    private javax.swing.JButton search_button;
    private javax.swing.JTextField transaction_delete_val;
    private javax.swing.JLabel transation_delete;
    // End of variables declaration//GEN-END:variables
}
